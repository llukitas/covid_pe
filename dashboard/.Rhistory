unlink('COVID_PE_cache', recursive = TRUE)
library(flexdashboard)
#library(rnaturalearth)
library(mapview)
#peru <- ne_states(country = 'peru')
library (raster)
library(rgdal)
library(dplyr)
#cargamos el shape
datoscovid <- read.csv("C:/Users/Lenovo/Desktop/covid_pe/data/positivos_covid.csv")
fallecidos <- read.csv("C:/Users/Lenovo/Desktop/covid_pe/data/fallecidos_covid.csv")
dist.map <- readOGR(dsn="C:/Users/Lenovo/Desktop/covid_pe/data/distritos/DISTRITOS.shp")
peru.map <- readOGR(dsn="C:/Users/Lenovo/Desktop/covid_pe/data/departamentos/DEPARTAMENTOS.shp")
###--- Totales
total_positivos=nrow(datoscovid)
total_falle=nrow(fallecidos)
##--Lima Metropolitana
LIMA_METRO <- c("150101","150102","150103","150104","150105","150106","150107","150108","150109",
"150110","150111","150112", "150113", "150114","150115","150116","150117","150118",
"150119","150120","150121","150122","150123","150124","150125",  "150126","150127","150128",
"150129","150130","150131","150132","150133","150134","150135","150136","150137","150138",
"150139","150140","150141","150142","150143")#CREAMOS EL OBJETO region que Guarda el nombre Lima Metropolitana
distritos_lima <- dist.map[as.character(dist.map@data$IDDIST) %in% LIMA_METRO, ]
Lima_Metro <-as.data.frame(distritos_lima@data)
Lima_Metro$DISTRITO[Lima_Metro$IDDIST=="150105"] <- "BREÑA"
Lima_Metro <- Lima_Metro[,5:6]
###--LIMA METROPPOLITANA
###---positivos
casos_lima <- datoscovid %>%
filter(DEPARTAMENTO=="LIMA") %>%
group_by(DISTRITO) %>%
summarize(CASOS_POSITIVOS=n())
###
defun_lima <- fallecidos %>%
filter(DEPARTAMENTO=="LIMA" & PROVINCIA=="LIMA") %>%
group_by(DISTRITO) %>%
summarize(FALLECIDOS=n())
casos_lima <- merge(casos_lima,defun_lima,by="DISTRITO",all.x=TRUE)
casos_lima<-merge(casos_lima,Lima_Metro,by="DISTRITO",all.x=TRUE)
distritos_lima@data = merge(distritos_lima@data,casos_lima,by.x="IDDIST",by.y="IDDIST", sort=FALSE)
distritos_lima@data=distritos_lima@data[,c(1,11,12,13)]
pink1 = colorRampPalette(c('wheat', 'red3'))
m1=mapview(distritos_lima,map.types = 'CartoDB.Positron',
layer.name = 'Casos Positivos Acumulados ',
zcol = "CASOS_POSITIVOS", col.regions=pink1,legend=T)
pink2 = colorRampPalette(c('slategray2', 'blue2'))
m2=mapview(distritos_lima,map.types = 'CartoDB.Positron',
layer.name = 'Fallecidos Acumulados',
zcol = "FALLECIDOS", col.regions=pink2,legend=T)
### A nivel Nacional
peru_data <-as.data.frame(peru.map@data)
peru_data <- peru_data[,1:2]
colnames(peru_data)[2] <- "DEPARTAMENTO"
datoscovid2 <- datoscovid
datoscovid2$DEPARTAMENTO <-  ifelse(datoscovid2$DEPARTAMENTO=="LIMA REGION", "LIMA",datoscovid2$DEPARTAMENTO)
casos_depa<-datoscovid2 %>%
group_by(DEPARTAMENTO) %>%
summarise(CASOS_POSITIVOS=n())
falle_depa <- fallecidos %>%
group_by(DEPARTAMENTO) %>%
summarise(FALLECIDOS=n())
casos_depa$DEPARTAMENTO
falle_depa$DEPARTAMENTO
#casos_peru<-merge(casos_depa,falle_depa,by="DEPARTAMENTO",all.x=TRUE)
peru_data <- merge(peru_data,casos_depa,by="DEPARTAMENTO",all.x=TRUE)
peru_data<-merge(peru_data,falle_depa,by="DEPARTAMENTO",all.x=TRUE)
peru.map@data = merge(peru.map@data,peru_data,by.x="IDDPTO",by.y="IDDPTO", sort=FALSE)
peru.map@data=peru.map@data[,c(1,5,3,6,7)]
#Convertir de factor a numerica
peru.map@data$CASOS_POSITIVOS=as.numeric(peru.map@data$CASOS_POSITIVOS)
peru.map@data$FALLECIDOS=as.numeric(peru.map@data$FALLECIDOS)
p1=mapview(peru.map,map.types = 'CartoDB.Positron',
layer.name = 'Casos Positivos Acumulados ',
zcol = "CASOS_POSITIVOS", col.regions=pink1,legend=T)
p2=mapview(peru.map,map.types = 'CartoDB.Positron',
layer.name = 'Fallecidos Acumulados',
zcol = "FALLECIDOS", col.regions=pink2,legend=T)
n=835456
valueBox(formatC(n, format="d", big.mark=','), icon = "fa-user-md",color = "purple")
library(flexdashboard)
#library(rnaturalearth)
library(mapview)
#peru <- ne_states(country = 'peru')
library(classInt)
library (raster)
library(rgdal)
library(dplyr)
library(RColorBrewer)
#cargamos el shape
datoscovid <- read.csv("C:/Users/Lenovo/Desktop/covid_pe/data/positivos_covid.csv")
fallecidos <- read.csv("C:/Users/Lenovo/Desktop/covid_pe/data/fallecidos_covid.csv")
dist.map <- readOGR(dsn="C:/Users/Lenovo/Desktop/covid_pe/data/distritos/DISTRITOS.shp")
peru.map <- readOGR(dsn="C:/Users/Lenovo/Desktop/covid_pe/data/departamentos/DEPARTAMENTOS.shp")
###--- Totales
total_positivos=nrow(datoscovid)
total_falle=nrow(fallecidos)
##--Lima Metropolitana
LIMA_METRO <- c("150101","150102","150103","150104","150105","150106","150107","150108","150109",
"150110","150111","150112", "150113", "150114","150115","150116","150117","150118",
"150119","150120","150121","150122","150123","150124","150125",  "150126","150127","150128",
"150129","150130","150131","150132","150133","150134","150135","150136","150137","150138",
"150139","150140","150141","150142","150143")#CREAMOS EL OBJETO region que Guarda el nombre Lima Metropolitana
distritos_lima <- dist.map[as.character(dist.map@data$IDDIST) %in% LIMA_METRO, ]
Lima_Metro <-as.data.frame(distritos_lima@data)
Lima_Metro$DISTRITO[Lima_Metro$IDDIST=="150105"] <- "BREÑA"
Lima_Metro <- Lima_Metro[,5:6]
###--LIMA METROPPOLITANA
###---positivos
casos_lima <- datoscovid %>%
filter(DEPARTAMENTO=="LIMA") %>%
group_by(DISTRITO) %>%
summarize(CASOS_POSITIVOS=n())
###
defun_lima <- fallecidos %>%
filter(DEPARTAMENTO=="LIMA" & PROVINCIA=="LIMA") %>%
group_by(DISTRITO) %>%
summarize(FALLECIDOS=n())
casos_lima <- merge(casos_lima,defun_lima,by="DISTRITO",all.x=TRUE)
casos_lima<-merge(casos_lima,Lima_Metro,by="DISTRITO",all.x=TRUE)
distritos_lima@data = merge(distritos_lima@data,casos_lima,by.x="IDDIST",by.y="IDDIST", sort=FALSE)
distritos_lima@data=distritos_lima@data[,c(1,11,12,13)]
pink1 = colorRampPalette(c('wheat', 'red3'))
m1=mapview(distritos_lima,map.types = 'CartoDB.Positron',
layer.name = 'Casos Positivos Acumulados ',
zcol = "CASOS_POSITIVOS", col.regions=pink1,legend=T)
pink2 = colorRampPalette(c('slategray2', 'blue2'))
m2=mapview(distritos_lima,map.types = 'CartoDB.Positron',
layer.name = 'Fallecidos Acumulados',
zcol = "FALLECIDOS", col.regions=pink2,legend=T)
### A nivel Nacional
peru_data <-as.data.frame(peru.map@data)
peru_data <- peru_data[,1:2]
colnames(peru_data)[2] <- "DEPARTAMENTO"
datoscovid2 <- datoscovid
datoscovid2$DEPARTAMENTO <-  ifelse(datoscovid2$DEPARTAMENTO=="LIMA REGION", "LIMA",datoscovid2$DEPARTAMENTO)
casos_depa<-datoscovid2 %>%
group_by(DEPARTAMENTO) %>%
summarise(CASOS_POSITIVOS=n())
falle_depa <- fallecidos %>%
group_by(DEPARTAMENTO) %>%
summarise(FALLECIDOS=n())
#casos_peru<-merge(casos_depa,falle_depa,by="DEPARTAMENTO",all.x=TRUE)
peru_data <- merge(peru_data,casos_depa,by="DEPARTAMENTO",all.x=TRUE)
peru_data<-merge(peru_data,falle_depa,by="DEPARTAMENTO",all.x=TRUE)
peru.map@data = merge(peru.map@data,peru_data,by.x="IDDPTO",by.y="IDDPTO", sort=FALSE)
peru.map@data=peru.map@data[,c(1,5,3,6,7)]
#Convertir de factor a numerica
peru.map@data$CASOS_POSITIVOS=as.numeric(peru.map@data$CASOS_POSITIVOS)
peru.map@data$FALLECIDOS=as.numeric(peru.map@data$FALLECIDOS)
p1=mapview(peru.map,map.types = 'CartoDB.Positron',
layer.name = 'Casos Positivos Acumulados ',
zcol = "CASOS_POSITIVOS", col.regions=pink1,legend=T)
p2=mapview(peru.map,map.types = 'CartoDB.Positron',
layer.name = 'Fallecidos Acumulados',
zcol = "FALLECIDOS", col.regions=pink2,legend=T)
palp <- c("white","red")
pcovid.2020 <- classIntervals(peru.map$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.pal3 <- findColours(pcovid.2020, palp)
plot(peru.map, col=color.pal3)
title(main="quantile")
legend("topleft", fill=attr(color.pal, "palette"),
legend=names(attr(color.pal3,"table")),bty="n")
library(classInt) #Para discretizar - contiene la funcion classIntervals
library(RColorBrewer)
palp <- c("antiquewhite","red")
pcovid.2020 <- classIntervals(peru.map$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.pal3 <- findColours(pcovid.2020, palp)
plot(peru.map, col=color.pal3)
title(main="quantile")
legend("topleft", fill=attr(color.pal, "palette"), legend=names(attr(color.pal3,"table")),bty="n")
library(classInt) #Para discretizar - contiene la funcion classIntervals
library(RColorBrewer)
palp <- c("antiquewhite","red")
pcovid.2020 <- classIntervals(peru.map$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.pal3 <- findColours(pcovid.2020, palp)
plot(peru.map, col=color.pal3)
title(main="quantile")
legend("topleft", fill=attr(color.pal, "palette"),
legend=names(attr(color.pal3,"table")),bty="n")
library(classInt) #Para discretizar - contiene la funcion classIntervals
library(RColorBrewer)
palp <- c("antiquewhite","red")
pcovid.2020 <- classIntervals(peru.map$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.pal3 <- findColours(pcovid.2020, palp)
plot(peru.map, col=color.pal3)
title(main="quantile")
legend("topleft", fill=attr(color.pal3, "palette"),
legend=names(attr(color.pal3,"table")),bty="n")
library(classInt) #Para discretizar - contiene la funcion classIntervals
library(RColorBrewer)
palp <- c("antiquewhite","red")
lcovid.2020 <- classIntervals(distritos_lima$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.lima <- findColours(lcovid.2020, palp)
plot(peru.map, col=color.lima)
legend("bottomleft",title="Rangos segun cuantiles", fill=attr(color.lima, "palette"),
legend=names(attr(color.lima,"table")),bty="n")
library(classInt) #Para discretizar - contiene la funcion classIntervals
library(RColorBrewer)
palp <- c("antiquewhite","red")
lcovid.2020 <- classIntervals(distritos_lima$CASOS_POSITIVOS, n = 4, style = "quantile", intervalClosure = "right")
color.lima <- findColours(lcovid.2020, palp)
plot(distritos_lima, col=color.lima)
legend("bottomleft",title="Rangos segun cuantiles", fill=attr(color.lima, "palette"),
legend=names(attr(color.lima,"table")),bty="n")
#Creando Estructuras de Vecindad
#NÃºmero de caso
nobs <- length(peru.map)
#Estructuras de vecindad
coords <- coordinates(peru.map)
mapa.nb <- poly2nb(peru.map,queen = FALSE)#Correr para consultar estructura de vecindad
#Creando Estructuras de Vecindad
#NÃºmero de caso
library(spdep)
nobs <- length(peru.map)
#Estructuras de vecindad
coords <- coordinates(peru.map)
mapa.nb <- poly2nb(peru.map,queen = FALSE)#Correr para consultar estructura de vecindad
plot(peru.map, border="grey")
#Creando Estructuras de Vecindad
#NÃºmero de caso
library(spdep)
nobs <- length(peru.map)
#Estructuras de vecindad
coords <- coordinates(peru.map)
mapa.nb <- poly2nb(peru.map,queen = FALSE)#Correr para consultar estructura de vecindad
#plot(peru.map, border="grey")
plot(mapa.nb, coords, add=TRUE, main= "Estructuras de Vecindad - Distritos de Brasil")
#Creando Estructuras de Vecindad
#NÃºmero de caso
library(spdep)
nobs <- length(peru.map)
#Estructuras de vecindad
coords <- coordinates(peru.map)
mapa.nb <- poly2nb(peru.map,queen = FALSE)#Correr para consultar estructura de vecindad
plot(peru.map, border="grey")
plot(mapa.nb, coords, add=TRUE, main= "Estructuras de Vecindad - Distritos de Brasil")
map_crd <- coordinates(peru.map)
W_cont_el <- poly2nb(peru.map, queen=T)
W_cont_el_mat <- nb2listw(W_cont_el, style="W", zero.policy=TRUE)
plot(W_cont_el_mat,coords=map_crd,pch=19, cex=0.1, col="gray")
map_crd <- coordinates(peru.map)
W_cont_el <- poly2nb(peru.map, queen=T)
W_cont_el_mat <- nb2listw(W_cont_el, style="W", zero.policy=TRUE)
plot(W_cont_el_mat,coords=map_crd,pch=19, cex=0.1, col="gray")
moran.test(peru.map$CASOS_POSITIVOS, listw=W_cont_el_mat, zero.policy=T)
map_crd <- coordinates(peru.map)
W_cont_el <- poly2nb(peru.map, queen=T)
W_cont_el_mat <- nb2listw(W_cont_el, style="W", zero.policy=TRUE)
#plot(W_cont_el_mat,coords=map_crd,pch=19, cex=0.1, col="gray")
#moran.test(peru.map$CASOS_POSITIVOS, listw=W_cont_el_mat, zero.policy=T)
moran.plot(peru.map$CASOS_POSITIVOS, listw=W_cont_el_mat, zero.policy=T, xlim=c(0,100),ylim=c(0,100), pch=16,col="black",cex=.5, quiet=F, labels=as.character(peru.map$CASOS_POSITIVOS),xlab="Porcentaje por Lula", ylab="Porcentaje por Lula (Spatial Lag)", main="Moran Scatterplot Lula 2006-2da Vuelta")
