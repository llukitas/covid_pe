"0","library(flexdashboard)"
"2","package ‘flexdashboard’ was built under R version 4.0.2"
"0","#library(rnaturalearth)"
"0","library(mapview)"
"2","package ‘mapview’ was built under R version 4.0.2"
"2","Registered S3 method overwritten by 'htmlwidgets':
  method           from         
  print.htmlwidget tools:rstudio
"
"0","#peru <- ne_states(country = 'peru')"
"0",""
"0","library(classInt) "
"2","package ‘classInt’ was built under R version 4.0.2"
"0","library (raster)"
"2","package ‘raster’ was built under R version 4.0.2"
"2","Loading required package: sp
"
"2","package ‘sp’ was built under R version 4.0.2"
"0","library(rgdal)"
"2","package ‘rgdal’ was built under R version 4.0.2"
"2","rgdal: version: 1.5-16, (SVN revision 1050)
Geospatial Data Abstraction Library extensions to R successfully loaded
Loaded GDAL runtime: GDAL 3.0.4, released 2020/01/28
Path to GDAL shared files: C:/Users/Lenovo/Documents/R/win-library/4.0/rgdal/gdal
GDAL binary built with GEOS: TRUE 
Loaded PROJ runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631]
Path to PROJ shared files: C:/Users/Lenovo/Documents/R/win-library/4.0/rgdal/proj
Linking to sp version:1.4-2
To mute warnings of possible GDAL/OSR exportToProj4() degradation,
use options(""rgdal_show_exportToProj4_warnings""=""none"") before loading rgdal.
"
"0","library(dplyr)"
"2","
Attaching package: ‘dplyr’

"
"2","The following objects are masked from ‘package:raster’:

    intersect, select, union

"
"2","The following objects are masked from ‘package:stats’:

    filter, lag

"
"2","The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

"
"0","library(RColorBrewer)"
"0","#cargamos el shape"
"0","datoscovid <- read.csv(""C:/Users/Lenovo/Desktop/covid_pe/data/positivos_covid.csv"")"
"0","fallecidos <- read.csv(""C:/Users/Lenovo/Desktop/covid_pe/data/fallecidos_covid.csv"")"
"0",""
"0","dist.map <- readOGR(dsn=""C:/Users/Lenovo/Desktop/covid_pe/data/distritos/DISTRITOS.shp"")"
"1","OGR data source with driver:"
"1"," "
"1","ESRI Shapefile"
"1"," "
"1","
"
"1","Source: """
"1",""
"1","C:\Users\Lenovo\Desktop\covid_pe\data\distritos\DISTRITOS.shp"
"1",""
"1",""", layer: """
"1",""
"1","DISTRITOS"
"1",""
"1",""""
"1",""
"1","
"
"1","with"
"1"," "
"1","1873"
"1"," "
"1","features"
"1","
"
"1","It has"
"1"," "
"1","10"
"1"," "
"1","fields"
"1","
"
"0","peru.map <- readOGR(dsn=""C:/Users/Lenovo/Desktop/covid_pe/data/departamentos/DEPARTAMENTOS.shp"")"
"1","OGR data source with driver:"
"1"," "
"1","ESRI Shapefile"
"1"," "
"1","
"
"1","Source: """
"1",""
"1","C:\Users\Lenovo\Desktop\covid_pe\data\departamentos\DEPARTAMENTOS.shp"
"1",""
"1",""", layer: """
"1",""
"1","DEPARTAMENTOS"
"1",""
"1",""""
"1",""
"1","
"
"1","with"
"1"," "
"1","25"
"1"," "
"1","features"
"1","
"
"1","It has"
"1"," "
"1","4"
"1"," "
"1","fields"
"1","
"
"0","###--- Totales"
"0",""
"0","total_positivos=nrow(datoscovid)"
"0","total_falle=nrow(fallecidos)"
"0",""
"0",""
"0",""
"0","##--Lima Metropolitana"
"0","LIMA_METRO <- c(""150101"",""150102"",""150103"",""150104"",""150105"",""150106"",""150107"",""150108"",""150109"","
"0","  ""150110"",""150111"",""150112"", ""150113"", ""150114"",""150115"",""150116"",""150117"",""150118"","
"0","  ""150119"",""150120"",""150121"",""150122"",""150123"",""150124"",""150125"",  ""150126"",""150127"",""150128"","
"0","  ""150129"",""150130"",""150131"",""150132"",""150133"",""150134"",""150135"",""150136"",""150137"",""150138"","
"0","  ""150139"",""150140"",""150141"",""150142"",""150143"")#CREAMOS EL OBJETO region que Guarda el nombre Lima Metropolitana"
"0",""
"0","distritos_lima <- dist.map[as.character(dist.map@data$IDDIST) %in% LIMA_METRO, ]"
"0","Lima_Metro <-as.data.frame(distritos_lima@data)"
"0","Lima_Metro$DISTRITO[Lima_Metro$IDDIST==""150105""] <- ""BREÃ‘A"""
"0","Lima_Metro <- Lima_Metro[,5:6]"
"0",""
"0","###--LIMA METROPPOLITANA"
"0","###---positivos"
"0","casos_lima <- datoscovid %>% "
"0","  filter(DEPARTAMENTO==""LIMA"") %>% "
"0","  group_by(DISTRITO) %>% "
"0","  summarize(CASOS_POSITIVOS=n())"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","###"
"0","defun_lima <- fallecidos %>% "
"0","  filter(DEPARTAMENTO==""LIMA"" & PROVINCIA==""LIMA"") %>% "
"0","  group_by(DISTRITO) %>% "
"0","  summarize(FALLECIDOS=n())"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","casos_lima <- merge(casos_lima,defun_lima,by=""DISTRITO"",all.x=TRUE)"
"0",""
"0","casos_lima<-merge(casos_lima,Lima_Metro,by=""DISTRITO"",all.x=TRUE)"
"0",""
"0","distritos_lima@data = merge(distritos_lima@data,casos_lima,by.x=""IDDIST"",by.y=""IDDIST"", sort=FALSE)"
"0",""
"0","distritos_lima@data=distritos_lima@data[,c(1,11,12,13)]"
"0",""
"0","pink1 = colorRampPalette(c('wheat', 'red3'))"
"0","m1=mapview(distritos_lima,map.types = 'CartoDB.Positron',"
"0","        layer.name = 'Casos Positivos Acumulados ',"
"0","        zcol = ""CASOS_POSITIVOS"", col.regions=pink1,legend=T)"
"0","pink2 = colorRampPalette(c('slategray2', 'blue2'))"
"0","m2=mapview(distritos_lima,map.types = 'CartoDB.Positron',"
"0","           layer.name = 'Fallecidos Acumulados',"
"0","           zcol = ""FALLECIDOS"", col.regions=pink2,legend=T)"
"0","### A nivel Nacional"
"0","peru_data <-as.data.frame(peru.map@data)"
"0",""
"0","peru_data <- peru_data[,1:2]"
"0","colnames(peru_data)[2] <- ""DEPARTAMENTO"""
"0",""
"0",""
"0","datoscovid2 <- datoscovid"
"0","datoscovid2$DEPARTAMENTO <-  ifelse(datoscovid2$DEPARTAMENTO==""LIMA REGION"", ""LIMA"",datoscovid2$DEPARTAMENTO)"
"0",""
"0",""
"0","casos_depa<-datoscovid2 %>% "
"0","  group_by(DEPARTAMENTO) %>% "
"0","  summarise(CASOS_POSITIVOS=n())"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","falle_depa <- fallecidos %>% "
"0","  group_by(DEPARTAMENTO) %>% "
"0","  summarise(FALLECIDOS=n())"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","  "
"0",""
"0",""
"0","#casos_peru<-merge(casos_depa,falle_depa,by=""DEPARTAMENTO"",all.x=TRUE)"
"0",""
"0","peru_data <- merge(peru_data,casos_depa,by=""DEPARTAMENTO"",all.x=TRUE)"
"0","peru_data<-merge(peru_data,falle_depa,by=""DEPARTAMENTO"",all.x=TRUE)"
"0",""
"0","peru.map@data = merge(peru.map@data,peru_data,by.x=""IDDPTO"",by.y=""IDDPTO"", sort=FALSE)"
"0",""
"0","peru.map@data=peru.map@data[,c(1,5,3,6,7)]"
"0",""
"0","#Convertir de factor a numerica"
"0","peru.map@data$CASOS_POSITIVOS=as.numeric(peru.map@data$CASOS_POSITIVOS)"
"0","peru.map@data$FALLECIDOS=as.numeric(peru.map@data$FALLECIDOS)"
"0",""
"0",""
"0","p1=mapview(peru.map,map.types = 'CartoDB.Positron',"
"0","           layer.name = 'Casos Positivos Acumulados ',"
"0","           zcol = ""CASOS_POSITIVOS"", col.regions=pink1,legend=T)"
"0",""
"0","p2=mapview(peru.map,map.types = 'CartoDB.Positron',"
"0","           layer.name = 'Fallecidos Acumulados',"
"0","           zcol = ""FALLECIDOS"", col.regions=pink2,legend=T)"
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
